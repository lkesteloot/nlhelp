
To do:

- Should we take the answer into account too, when searching?
- Different TF-IDF:
    - https://class.coursera.org/nlp/lecture/186
        - TF = (1 + log10 termCOUNT)?
        - IDF = log10 N/docCount
        - Only include terms both in query and doc? Does that happen automatically?
    - http://pyevolve.sourceforge.net/wordpress/?p=1747
    - https://www.cs.rutgers.edu/~mlittman/courses/ml03/iCML03/papers/ramos.pdf
- Make H1 smaller in question.
- Get rid of things like "previous question" in answers. Or link to FAQ.
- If scores are all 0, then say so.
- After getting the answer, select the text field.
- Select text field when page comes up.
- Mess with nicer DB interface that uses query{}.
    - http://www.mono-project.com/docs/database-access/providers/postgresql/
    - http://fsprojects.github.io/SQLProvider/

------------------------------------------------------------------------------------------

- Design website UI.
    - Title
        - OurGroceries Help
    - Short explanation of what to do.
        - Ask a brief question below and the system will attempt to answer it for you.
    - Example queries.
        - "categorize my list", "make recipe", "share list", "problem not sharing".
    - Text input box.
    - Answer to the question (may be missing).
    - List of related questions.
    - Did this help? Yes/No.

- Design web API.
    - Operations:
        - GET /search
            - Request:
                - q=question
                - referer=referring query ID
            - Response:
                - {
                    "id": "query ID",
                    "query": "original query",
                    "responseId": "responseId",
                    "text": "Markdown text or null if not found",
                    "related: [
                        "List of related queries"
                    ]
                  }
        - POST /search
            - Request
                - referer=referring query ID.
                - helped=0 or 1 for whether it helped.
